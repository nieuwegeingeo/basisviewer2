var Geodan=Geodan||{};window.Geodan=Geodan;Geodan.Format=Geodan.Format||{};Geodan.Format.GeocodeResponse=OpenLayers.Class(OpenLayers.Format.GML,{xlsns:'http://www.opengis.net/xls',initialize:function(options){OpenLayers.Format.GML.prototype.initialize.apply(this,[options]);this.featureName='xls:GeocodedAddress';this.setNamespace('gml','http://www.opengis.net/gml');},read:function(data){if(typeof data=="string"){data=OpenLayers.Format.XML.prototype.read.apply(this,[data]);}
var geocodedAddressNodes=this.getElementsByTagNameNS(data.documentElement,this.xlsns,'GeocodedAddress');var geocodedAddresses=[];for(var i=0;i<geocodedAddressNodes.length;i++){var geocodedAddress=this.parseGeocodedAddress(geocodedAddressNodes[i]);if(geocodedAddress){geocodedAddresses.push(geocodedAddress);}}
return geocodedAddresses;},parseGeocodedAddress:function(node){var children,geocodedAddress={},nodeList;nodeList=this.getElementsByTagNameNS(node,this.namespaces['gml'],'Point');if(nodeList.length>0){var parser=this.parseGeometry['point'];geocodedAddress.geometry=parser.apply(this,[nodeList[0]]);}
nodeList=this.getElementsByTagNameNS(node,this.xlsns,'Address');if(nodeList.length>0){children=this.getElementsByTagNameNS(nodeList[0],this.xlsns,'StreetAddress');if(children.length>0){var childNode=children[0].firstChild;while(childNode){if(childNode.nodeType==1){if(childNode.tagName=='xls:Street'){geocodedAddress.street=this.getChildValue(childNode);}
else if(childNode.tagName=='xls:Building'){geocodedAddress.number=childNode.getAttribute('number');geocodedAddress.subdivision=childNode.getAttribute('subdivision');}}
childNode=childNode.nextSibling;}}
children=this.getElementsByTagNameNS(nodeList[0],this.xlsns,'PostalCode');if(children.length>0){geocodedAddress.postalCode=this.getChildValue(children[0]);}
children=this.getElementsByTagNameNS(nodeList[0],this.xlsns,'Place');for(var i=0;i<children.length;i++){var child=children[i];var type=child.getAttribute('type');var name=type.substr(0,1).toLowerCase()+type.substr(1);geocodedAddress[name]=this.getChildValue(child);if(name==='countrySecondarySubdivision'){var geom=OpenLayers.Geometry.fromWKT(geocodedAddress[name]);if(geom){geocodedAddress['extent']=geom.getBounds();}}}}
return geocodedAddress;},CLASS_NAME:'Geodan.Format.GeocodeResponse'});Geodan.Format.ReverseGeocodeRequest=OpenLayers.Class(OpenLayers.Format.GML,{xlsns:'http://www.opengis.net/xls',initialize:function(options,position){OpenLayers.Format.GML.prototype.initialize.apply(this,[options]);this.setNamespace('xls',this.xlsns);this.position=OpenLayers.Util.extend({},position);},write:function(){var xml='<xls:ReverseGeocodeRequest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xls="http://www.opengis.net/xls" xmlns:gml="http://www.opengis.net/gml"><xls:Position><gml:Point srsName="EPSG:28992"><gml:pos dimension="2">'
+this.position.x+' '+this.position.y+'</gml:pos></gml:Point></xls:Position></xls:ReverseGeocodeRequest>';return xml;},createPosition:function(){var node=this.createElementNS(this.xlsns,'xls:Position');var pointNode=this.createElementNSPlus('gml:Point',{uri:this.gmlns,attributes:{srsName:'EPSG:28992'}});pointNode.appendChild(this.createElementNSPlus('gml:pos',{uri:this.gmlns,value:this.position.x+' '+this.position.y,attributes:{dimension:2}}));node.appendChild(pointNode);return node;},CLASS_NAME:'Geodan.Format.ReverseGeocodeRequest'});Geodan.Format.ReverseGeocodeResponse=OpenLayers.Class(OpenLayers.Format.GML,{xlsns:'http://www.opengis.net/xls',initialize:function(options){OpenLayers.Format.GML.prototype.initialize.apply(this,[options]);this.featureName='xls:ReverseGeocodedLocation';this.setNamespace('gml','http://www.opengis.net/gml');},read:function(data){if(typeof data=="string"){data=OpenLayers.Format.XML.prototype.read.apply(this,[data]);}
var geocodedAddressNodes=this.getElementsByTagNameNS(data.documentElement,this.xlsns,'ReverseGeocodedLocation');var geocodedAddresses=[];for(var i=0;i<geocodedAddressNodes.length;i++){var geocodedAddress=this.parseGeocodedAddress(geocodedAddressNodes[i]);if(geocodedAddress){geocodedAddresses.push(geocodedAddress);}}
return geocodedAddresses;},parseGeocodedAddress:function(node){var geocodedAddress={};var nodeList=this.getElementsByTagNameNS(node,this.namespaces['gml'],'Point');if(nodeList.length>0){var parser=this.parseGeometry['point'];geocodedAddress.geometry=parser.apply(this,[nodeList[0]]);}
var nodeList=this.getElementsByTagNameNS(node,this.xlsns,'Address');if(nodeList.length>0){var children=this.getElementsByTagNameNS(nodeList[0],this.xlsns,'StreetAddress');if(children.length>0){var childNode=children[0].firstChild;while(childNode){if(childNode.nodeType==1){if(childNode.tagName=='xls:Street'){geocodedAddress.street=this.getChildValue(childNode);}
else if(childNode.tagName=='xls:Building'){geocodedAddress.number=childNode.getAttribute('number');geocodedAddress.subdivision=childNode.getAttribute('subdivision');}}
childNode=childNode.nextSibling;}}
var children=this.getElementsByTagNameNS(nodeList[0],this.xlsns,'PostalCode');if(children.length>0){geocodedAddress.postalCode=this.getChildValue(children[0]);}
var children=this.getElementsByTagNameNS(nodeList[0],this.xlsns,'Place');for(var i=0;i<children.length;i++){var child=children[i];var type=child.getAttribute('type');var name=type.substr(0,1).toLowerCase()+type.substr(1);geocodedAddress[name]=this.getChildValue(child);}}
return geocodedAddress;},CLASS_NAME:'Geodan.Format.ReverseGeocodeResponse'});Geodan.Geocoder=OpenLayers.Class(OpenLayers.Control,{autocomplete:{minLength:3,delay:500},url:window.location.protocol+'//'+location.host+'/geocoder/geocode?',tooltip:' Zoek op postcode of adres...',extentMargin:1000,pointMargin:1000,minimumZoomScale:5000,lastSelectGroup:null,inputSize:40,initialize:function(options){OpenLayers.Control.prototype.initialize.apply(this,arguments)
this.autoActivate=true;this.allowSelection=true;},draw:function(px){if(this.div==null){this.div=OpenLayers.Control.prototype.draw.apply(this,arguments);}
var form=document.createElement('form');form.setAttribute('method','GET');form.setAttribute('action','#');form.setAttribute('class','geocoderform');form.setAttribute('onsubmit',"javascript:return false;");var input=document.createElement('input');input.setAttribute('type','text');input.setAttribute('size',this.inputSize);input.setAttribute('title',this.tooltip);input.setAttribute('class','form-autocomplete');input.setAttribute('id',this.id+'-input');form.appendChild(input);this.div.appendChild(form);return this.div;},activate:function(){this.attachAutocomplete();$('input',this.div).val(this.tooltip);var context={geocoder:this};OpenLayers.Event.observe(this.div,'click',OpenLayers.Function.bindAsEventListener(this.onInputClick,context));},attachAutocomplete:function(){var self=this;$('input',this.div).autocomplete({minLength:this.autocomplete.minLength,delay:this.autocomplete.delay,appendTo:this.div,source:function(request,response){try{var url,ajax_data;if(OpenLayers.ProxyHost==''){url=self.url;ajax_data=self.params(request);}
else{url=OpenLayers.ProxyHost;ajax_data={};ajax_data['url']=self.url
+(self.url.indexOf('?')<0?'?':'&')
+$.param(self.params(request));}
$('input',self.div).addClass('throbbing');$.ajax({url:url,dataType:'xml',data:ajax_data,success:function(data){return self.success.apply(self,[data,response,request]);},complete:function(xmlHttpRequest,textStatus){$('input',self.div).removeClass('throbbing');}});}catch(e){}},focus:function(event,ui){if(ui.item&&ui.item.address&&ui.item.address.street){self.lastSelectGroup=ui.item.address.street;}},select:function(event,ui){var extent,point,margin;if(ui.item){if(ui.item.address){if(ui.item.address.extent){margin=self.extentMargin;extent=ui.item.address.extent;Geogem.addPosition((extent.right+extent.left)/2,(extent.bottom+extent.top)/2);extent.left-=margin;extent.bottom-=margin;extent.top+=margin;extent.right+=margin;self.zoomToExtent(extent);}
else if(ui.item.address.geometry){margin=self.pointMargin;point=ui.item.address.geometry;Geogem.addPosition(point.x,point.y);extent=new OpenLayers.Bounds(point.x-margin,point.y-margin,point.x+margin,point.y+margin);self.zoomToExtent(extent);}}
else{}}
else{}}});},params:function(request){var params={country:'Nederland'};var match=request.term.match(/(^[1-9][0-9]{1,3}[a-zA-Z]{0,2})|((^[^,]*)(,\s*(.*))?)/);if(match){if(match[1]){if(this.lastSelectGroup&&request.term.toLowerCase().indexOf(this.lastSelectGroup.toLowerCase())==0){params.postalCode=this.lastSelectGroup;var remains=request.term.substr(this.lastSelectGroup.length);params.building=$.trim(remains)+'*';}
else{params.postalCode=match[1]+'*';}
request.searchParameter='postalCode';}
else{if(this.lastSelectGroup&&($.trim(request.term.toLowerCase()).length<$.trim((this.lastSelectGroup.toLowerCase())).length)){this.lastSelectGroup=null;}
if(this.lastSelectGroup&&(request.term.toLowerCase().indexOf(this.lastSelectGroup.toLowerCase())==0||this.lastSelectGroup.term.toLowerCase().indexOf(request.term.toLowerCase())==0)){params.street=this.lastSelectGroup;var remains=match[2].substr(this.lastSelectGroup.length);params.building=$.trim(remains)+'*';}
else{params.street='*'+match[3]+'*';if(match[5]){params.building=match[5]+' *';}}
request.searchParameter='street';}
return params;}},zoomToExtent:function(extent){var diff;var resolution=OpenLayers.Util.getResolutionFromScale(this.minimumZoomScale,'m');var minSize=this.map.getSize();minSize.w*=resolution;minSize.h*=resolution;var newSize=extent.getSize();if(minSize.w>newSize.w){diff=minSize.w-newSize.w;extent.left-=diff/2;extent.right+=diff/2;}
if(minSize.h>newSize.h){diff=minSize.h-newSize.h;extent.bottom-=diff/2;extent.top+=diff/2;}
this.map.zoomToExtent(extent,true);},success:function(data,response,request){var format=new Geodan.Format.GeocodeResponse();var addresses=format.read(data);var numAddresses=addresses.length;var that=this;var adsort=function(a,b){anum=parseInt(a.number);bnum=parseInt(b.number);if(anum>bnum){return 1;}
else if(anum<bnum){return-1;}
return 0;}
addresses.sort(adsort);var i=0;response($.map(addresses,function(item){var result={};i++;if(item.postalCode&&request.searchParameter!=='street'){result.label=item.postalCode+' ('+item.street+(item.number?' '+item.number:'')+')';result.value=item.postalCode;if(numAddresses==1&&request.term.toLowerCase()===item.postalCode.toLowerCase()){that.lastSelectGroup=item.postalCode;}}
else{result.label=item.street+(item.number?' '+item.number+(item.subdivision?' '+item.subdivision:''):'');result.value=result.label;if(numAddresses==1&&request.term.toLowerCase()===item.street.toLowerCase()){that.lastSelectGroup=item.street;}}
result.address=item;if(i>10){return{};}
return result;}));},ignoreEvent:function(evt){},onInputClick:function(evt){if(this.geocoder.tooltip==$('input',this.geocoder.div).val()){$('input',this.geocoder.div).val("");}
$('input',this.geocoder.div).focus();},CLASS_NAME:'Geodan.Geocoder'});var Geogem=Geogem||{};Geogem.Format=Geogem.Format||{};Geogem.Format.PdokLocatieServer=OpenLayers.Class(OpenLayers.Format.JSON,{initialize:function(options){OpenLayers.Format.JSON.prototype.initialize.apply(this,[options]);},read:function(json,type,filter){type=(type)?type:"Suggest";var results=null;var obj=null;if(typeof json=="string"){obj=OpenLayers.Format.JSON.prototype.read.apply(this,[json,filter]);}else{obj=json;}
if(!obj){OpenLayers.Console.error("Bad JSON: "+json);}else{try{results=obj.response.docs;}catch(err){OpenLayers.Console.error(err);}}
return results;},CLASS_NAME:"Geogem.Format.PdokLocatieServer"});Geogem.PdokLocatieServer=OpenLayers.Class(OpenLayers.Control,{autocomplete:{minLength:2,delay:500},url:window.location.protocol+'//geodata.nationaalgeoregister.nl/locatieserver/v3/suggest?q=type:adres%20and%20nieuwegein%20and%20',tooltip:' Zoek op postcode huisnummer of adres...',extentMargin:100,pointMargin:100,minimumZoomScale:1000,lastSelectGroup:null,inputSize:40,initialize:function(options){OpenLayers.Control.prototype.initialize.apply(this,arguments)
this.autoActivate=true;this.allowSelection=true;},draw:function(px){if(this.div==null){this.div=OpenLayers.Control.prototype.draw.apply(this,arguments);}
var form=document.createElement('form');form.setAttribute('method','GET');form.setAttribute('action','#');form.setAttribute('class','geocoderform');form.setAttribute('onsubmit',"javascript:return false;");var input=document.createElement('input');input.setAttribute('type','text');input.setAttribute('size',this.inputSize);input.setAttribute('title',this.tooltip);input.setAttribute('class','form-autocomplete');input.setAttribute('id',this.id+'-input');form.appendChild(input);this.div.appendChild(form);return this.div;},activate:function(){this.attachAutocomplete();$('input',this.div).val(this.tooltip);var context={geocoder:this};OpenLayers.Event.observe(this.div,'click',OpenLayers.Function.bindAsEventListener(this.onInputClick,context));},attachAutocomplete:function(){var self=this;$('input',this.div).autocomplete({minLength:this.autocomplete.minLength,delay:this.autocomplete.delay,appendTo:this.div,source:function(request,response){try{var url,ajax_data;if(OpenLayers.ProxyHost==''){url=self.url;ajax_data=self.params(request);}
else{url=OpenLayers.ProxyHost;ajax_data={};ajax_data['url']=self.url
+(self.url.indexOf('?')<0?'?':'&')
+$.param(self.params(request));}
$('input',self.div).addClass('throbbing');var request=OpenLayers.Request.GET({url:url,params:ajax_data,proxy:OpenLayers.ProxyHost,success:function(data){$('input',self.div).removeClass('throbbing');return self.success.apply(self,[data,response,request]);},error:function(xmlHttpRequest,textStatus,errorThrown){console.log(OpenLayers.i18n('Geocoding failed: ${statusText} (${statusCode})',{statusText:xmlHttpRequest.statusText,statusCode:xmlHttpRequest.status}));}});}catch(e){}},focus:function(event,ui){if(ui.item&&ui.item.address){self.lastSelectGroup=ui.item.value;}},select:function(event,ui){var extent,point,margin;if(ui.item){var request=OpenLayers.Request.GET({url:window.location.protocol+'//geodata.nationaalgeoregister.nl/locatieserver/v3/lookup',params:{id:ui.item.id},proxy:OpenLayers.ProxyHost,success:function(data){$('input',self.div).removeClass('throbbing');var format=new Geogem.Format.PdokLocatieServer();var addresses=format.read(data.responseText,'Lookup');var adres=addresses[0];var pointWKT=adres.centroide_rd;var wktformat=new OpenLayers.Format.WKT()
var feature=wktformat.read(pointWKT);var point=feature.geometry;margin=self.pointMargin;extent=new OpenLayers.Bounds(point.x-margin,point.y-margin,point.x+margin,point.y+margin);self.zoomToExtent(extent);Geogem.addPosition(point.x,point.y);if(adres.type=='adres'){$('input',this.div).val(adres.straatnaam+' '+adres.huisnummer);}
else if(adres.type=='weg'){$('input',this.div).val(adres.straatnaam)}
else if(adres.type=='postcode'){$('input',this.div).val(adres.postcode)}
else{console.log('GEEN NIEUWE SEARCH')}},error:function(xmlHttpRequest,textStatus,errorThrown){console.log(OpenLayers.i18n('Geocoding failed: ${statusText} (${statusCode})',{statusText:xmlHttpRequest.statusText,statusCode:xmlHttpRequest.status}));}});}
else{}}});},params:function(request){var city='';if(Geogem.Settings.geocoder.city){city=' and '+Geogem.Settings.geocoder.city;}
return params={'q':(request.term+city)};},zoomToExtent:function(extent){this.map.zoomToExtent(extent,true);},success:function(data,response,request){var format=new Geogem.Format.PdokLocatieServer();var addresses=format.read(data.responseText,'Suggest');var that=this;if(addresses.length==0){return{};}
response($.map(addresses,function(item){var result={};address=item;var label='';if(address.weergavenaam){label+=address.weergavenaam;}
result.label=label;result.id=address.id
return result;}));},ignoreEvent:function(evt){},onInputClick:function(evt){if(this.geocoder.tooltip==$('input',this.geocoder.div).val()){$('input',this.geocoder.div).val("");}
$('input',this.geocoder.div).focus();},CLASS_NAME:'Geogem.PdokLocatieServer'});Geodan.ReverseGeocoder=OpenLayers.Class({url:window.location.protocol+'//geoserver.nl/geocoderrvs/NLaddressrvs.aspx?Request=revgeocode&',method:'GET',initialize:function(options){OpenLayers.Util.extend(this,options);},destroy:function(){},processAddresses:function(addresses){},onFail:function(msg){alert(msg);},reverseGeocode:function(point){var host_match=this.url.match(/http[s]?:\/\/([^\/\:]*)(\:([0-9]{4}))?\//);var proxyIsNeeded=host_match.length>=2&&host_match[1]!=location.hostname;if(!proxyIsNeeded&&host_match.length>=3&&(host_match[3]?host_match[3]:'')!=location.port){proxyIsNeeded=true;}
var ajax_data={};var ajax_url;var ajax_method='GET';if(this.method=='POST'){ajax_method='POST';var format=new Geodan.Format.ReverseGeocodeRequest(null,point);if(proxyIsNeeded){ajax_url=OpenLayers.ProxyHost+escape(this.url);}
else{ajax_url=this.url;}
ajax_data='<?xml version="1.0" encoding="UTF-8"?>'+format.write();}
else{var data={x:point.x,y:point.y};if(proxyIsNeeded){ajax_url=Geogem.Settings.proxyUrl;ajax_data.url=this.url+$.param(data);}
else{ajax_url=this.url;ajax_data=data;}}
var options={url:ajax_url,type:ajax_method,async:true,data:ajax_data,dataType:'xml',timeout:10000,success:function(msg){var response=new Geodan.Format.ReverseGeocodeResponse();addresses=response.read(msg);Geodan.ReverseGeocoder.prototype.processAddresses.apply(this,[addresses]);},error:function(xhr,textStatus,errorThrown){var msg;try{if(xhr.status!=200){msg='Er is een fout opgetreden in [ReverseGeocoder.js]: '+xhr.statusText+' ('+xhr.status+')';}
else{msg='Er is een fout opgetreden in [ReverseGeocoder.js]: '+xhr.responseText;}}
catch(e){msg='Er is een exceptie opgetreden in [ReverseGeocoder.js]: '+textStatus;}
finally{Geodan.ReverseGeocoder.prototype.onFail.apply(this,[msg]);}}};if(ajax_method=='POST'){options.contentType='text/xml';}
var addresses=null;var tmp=$.ajax(options);return addresses;},CLASS_NAME:"Geodan.ReverseGeocoder"});